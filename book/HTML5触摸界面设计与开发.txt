移动设备与电脑中浏览器的区别：
1、电脑中的浏览器种类各异，而移动设备的浏览器都是基于safari的。
2、移动设备中浏览器都是全屏模式，而电脑中可以放大缩小。
3、移动设备中打开浏览器内容加载太慢的时候，不可以操作其他进程，而电脑上的浏览器可以。

四种主要的操作系统适用于触摸设备：iOS 、 Blackberry OS 、 Android 、 Windows 8
iOS是所有苹果手机和平板运行的操作系统。因为苹果控制着硬件，所以所有的iPad和Iphone能以相同的方式运行，只有大小和处理能力上的差异。苹果推出软件更新时无需依赖运营商，这意味着，苹果设备更容易运行最新版的操作系统。
苹果随着操作系统的升级和同步升级浏览器，它不允许用户安装不同内核的流量器。至少现在，可以认为iOS用户组要安装这上一个较新版本的iOS和iOS Safari。
Android包括一个默认浏览器，而且允许用户安装不同的浏览器。4.1版之后，Android上默认浏览器改为 Chrome 。

黑莓 Blackberry 的平板称为 Playbook 。
桌面和移动设备之间最显著的差异是规格。移动设备有两种主要的规格：手机和平板电脑。
一部iPhone在性能上可以被认为是一台装有不错的显卡但性能稍逊的电脑。各个设备的CPU和内存各异，图像硬件也是这样。在Android 3.0之前，浏览器完全没有图形硬件加速功能。
目前所有的移动设备在绘图上，都使用所谓的“共享内存”。与桌面电脑上的显卡不同，移动设备上的图形硬件没有专用的内存，只是共享系统内存。这意味着，随着越来越多的东西被添加到图形存储器，系统可用的内存会越来越少。
浏览器的情况远没有移动设备复杂。Webkit无疑是最流行的移动浏览器内核，他支撑这所有苹果、Android和黑莓设备的默认浏览器。Windows手机运行 IE 10，另外 Opera Mobile 浏览器只有不到 1% 的市场份额。
WebKit 起源于名为 Konqueror 的开源浏览器的引擎。苹果将它进一步开发为 WebKit，作为 Safari 背后的浏览器引擎。
iOS版的WebKit是iOS上唯一允许的浏览器引擎。
可以使用 Modernizr.js 探测HTML5和CSS3新特性。
http-equiv元信息告诉浏览器如何去做，等效于设置了HTTP报头。
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">  用http-equiv属性设置非标准的 "X-UA-Compatible"报头。值是 IE=edge和chrome=1，如果IE用户安装了 Chrome Frame插件，则可以使用这个插件；如果没有安装，则使用 IE 浏览器最新、最好的引擎呈现，而不是以传统模式呈现。
viewport属性设置视口的大小，如：
<meta name="viewport" content="width=600">
页面将会以宽度为600px的大小撑满整个屏幕的宽度。还可以将宽度（高度）设置成设备的宽度，如：
<meta name="viewport" content="width=device-width">
由于CSS2已被广泛支持，开发者已经能够通过在 link 标签上设置不同的媒体查询值，来为不同的多媒体设备提供不同的样式表。通常情况下这个值都被用于规定一个单独的“打印”样式表，如：
<link rel="stylesheet" media="screen" href="style.css" />
<link rel="stylesheet" media="print" href="print-style.css" />
CSS3提供了更强大的语法，让你可以根据更多的条件过滤样式表，而不是只能根据媒体类型来过滤。媒体查询由一个媒介类型和其他表达式组成。
媒体查询可以由一个布尔运算符开始。用 “not”开的话，会将字段最后解析出的结果取反，就像在 Javascript 中使用 “!”一样。最常见的，你可以使用only操作符来开始。由于就的旧的浏览器无法解析 only 操作符，就可以有效地在旧浏览器上屏蔽掉只应用与现代浏览器的样式。
桌面用户可以改变浏览器的大小，当桌面用户调用浏览器大小时，会发现随着调整到不同的宽度，可能看到应用于手机和平板电脑的样式。如果你想让这些样式只适用于设备的物理宽度，可以使用 max-device-width 或 min-device-width 属性来设置。

浏览器是如何加载页面的？
1、解析域名：首先浏览器需要知道该网站的IP地址。它向 DNS 服务器发送一个包含域名的请求，然后 DNS 服务器返回对应的 IP 地址。为了减少 DNS 服务器上的负载，并提高性能， DNS 查找机制会被浏览器、设备及设备和服务器之间的路由器和代理服务器缓存。这就是为什么更改 DNS 记录可能需要几天才能生效的原因。
2、发起请求：浏览器会向由 DNS 查找得到的 IP 地址的主机发起 TCP 链接。然后发送请求。请求中包含网址、浏览器信息、浏览器能接受的数据类型（编码和语言），及所有相关的 cookie ，包括域和路径的 cookie 。
3、浏览器开始下载相应。随着相应流到达，浏览器解析HTML并识别出更多的资源。然后浏览器开始获取这些资源。
4、渲染页面：最后浏览器会尽快渲染页面。

为什么页面加载缓慢？
1、HTTP 连接数
2、总的字节数
3、等待时的渲染阻塞
4、延迟
5、缓存能力差

webkit开发人员工具的网络选项，每栏上的浅色代表的是延迟，深色的代码下载。你可以看到，在浏览器解析部分页面之前，没有任何外链的资源开始加载。
在网页上的每一个外链的资源需要一次单独的 HTTP 请求。一次 HTTP 请求不只是下载数据那么简单；每次请求都包含一定量的额外开销。所以，连续不断的请求许多小文件会比一次请求大文件慢许多。当然，浏览器可以同时下载多个文件。
